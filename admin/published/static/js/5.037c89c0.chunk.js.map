{"version":3,"sources":["views/pages/ForgotPassword.js","Api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["ForgotPassword","token","Cookies","get","useState","loading","isLoading","show","text","type","alert","showAlert","email","form","setForm","sendVerification","Api","data","msg","error","className","undefined","remove","to","md","color","onShowChange","s","closeButton","onSubmit","event","preventDefault","name","placeholder","onChange","e","target","value","xs","size","method","url","auth","success","errors","parameters","authHeaders","Headers","append","state","authToken","headers","formData","getFormData","body","fetch","baseUrl","then","res","json","result","status","message","FormData","key","hasOwnProperty","checkUser","store","dispatch","userPermissions","localStorage","setItem","JSON","stringify","console","log","this","getState","_classCallCheck","instance","Constructor","TypeError","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test"],"mappings":"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","file":"static/js/5.037c89c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n// import { useDispatch } from 'react-redux'\r\n// import { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport Api from '../../Api';\r\nimport {\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport {\r\n    CButton,\r\n    CSpinner,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow,\r\n    CAlert as Alert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst ForgotPassword = () => {\r\n    // const dispatch = useDispatch()\r\n    // const history = useHistory();\r\n    const token = Cookies.get('authToken');\r\n    const [loading, isLoading] = useState(false)\r\n    const [alert, showAlert] = useState({\r\n        show: false,\r\n        text: null,\r\n        type: 'info'\r\n    });\r\n    const [form, setForm] = useState({\r\n        email: null,\r\n    })\r\n\r\n    const setInput = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value })\r\n    }\r\n    const dismissAlert = (s) => {\r\n        showAlert({ ...alert, show: s, })\r\n    }\r\n    const removeCookie = () => {\r\n        Cookies.remove(\"authToken\")\r\n    }\r\n    const resetPassword = (event) => {\r\n        event.preventDefault();\r\n        sendVerification();\r\n    }\r\n    const sendVerification = () => {\r\n        isLoading(true)\r\n        new Api().get(\"POST\", \"/reset\", form, false, (data, msg) => {\r\n            isLoading(false)\r\n            showAlert({ show: true, text: msg, type: 'success' })\r\n        }, (error) => {\r\n            isLoading(false)\r\n            showAlert({ show: true, text: error, type: 'danger' })\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n            {(token === 'undefined' || token === undefined || token === '' || token === null) ? removeCookie()\r\n                : <Redirect to=\"/dashboard\" />}\r\n            <CContainer>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"5\">\r\n                        <CCardGroup>\r\n                            <CCard className=\"p-4\">\r\n                                <CCardBody>\r\n                                    <h1>Forgot Password</h1>\r\n                                    <p className=\"text-muted\">Enter your email to reset your account</p>\r\n                                    <Alert color={alert.type} show={alert.show} onShowChange={dismissAlert} closeButton>\r\n                                        {alert.text}\r\n                                    </Alert>\r\n                                    <CForm onSubmit={resetPassword}>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-user\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput name=\"email\" type=\"text\" placeholder=\"Email\" onChange={setInput} />\r\n                                        </CInputGroup>\r\n                                        <CRow>\r\n                                            <CCol xs=\"6\" className=\"text-left\">\r\n                                                <CButton to=\"/login\" color=\"link\" className=\"\">Login</CButton>\r\n                                            </CCol>\r\n                                            <CCol xs=\"6\" className=\"text-right\">\r\n                                                <CButton color=\"primary\" type=\"submit\" className=\"px-4\">\r\n                                                    {(!loading) ? 'Reset' : <CSpinner className=\"mt-1\" color=\"light\" size=\"sm\" />}\r\n                                                </CButton>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    </CForm>\r\n\r\n                                </CCardBody>\r\n                            </CCard>\r\n\r\n                        </CCardGroup>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import store from './store';\r\n\r\nclass Api {\r\n\r\n    // \r\n    constructor() {\r\n        this.baseUrl = \"http://127.0.0.1:8000/api/admin\";\r\n        // this.baseUrl = \"https://parvaty.me/api/admin\";\r\n        this.state = store.getState();\r\n        // this.dispatch = useDispatch()\r\n    }\r\n\r\n    get = (method, url, data = null, auth = false, success = () => { }, errors = () => { }) => {\r\n        // let Params\r\n        let parameters = {};\r\n        parameters.method = method;\r\n\r\n        // set auth header\r\n        if (auth) {\r\n            var authHeaders = new Headers();\r\n            authHeaders.append(\"Authorization\", \"Bearer \" + this.state.authToken)\r\n            parameters.headers = authHeaders;\r\n        }\r\n        // Form data\r\n        if (data) {\r\n            const formData = this.getFormData(data)\r\n            parameters.body = formData\r\n        }\r\n\r\n        // Send\r\n        fetch(this.baseUrl + url, parameters).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result.status === 1) {\r\n                        success(result.data, result.message)\r\n                    } else {\r\n                        errors(result.message)\r\n                    }\r\n                },\r\n                (error) => {\r\n                    errors(\"Something went wrong, please contact the admin or try again later.\")\r\n                }\r\n            )\r\n    }\r\n    getFormData = (data) => {\r\n        const formData = new FormData();\r\n        if (data) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    formData.append(key, data[key])\r\n                }\r\n            }\r\n        }\r\n        return formData;\r\n    }\r\n    checkUser = () => {\r\n        this.get(\"GET\", \"/check\", null, true, (data, msg) => {\r\n            store.dispatch({ type: \"set\", userPermissions: data })\r\n            localStorage.setItem('userPermissions', JSON.stringify(data));\r\n        }, (error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\nexport default Api;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}