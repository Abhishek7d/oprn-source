{"version":3,"sources":["model/ApiHandler.js","model/config.js","components/Navigation.js","components/Sidebar.js","screens/CreateServerScreen.js","screens/Login.js","screens/Register.js","screens/ForgotPassword.js","screens/ResetScreen.js","components/ServerCard.js","screens/Servers.js","screens/ApplicationCard.js","screens/Applications.js","screens/Logout.js","components/Routes.js","App.js","serviceWorker.js","index.js","assets/images/loading.gif","assets/images/wordpress.png"],"names":["ApiHandler","getResult","url","method","data","headers","success","faild","parameters","body","fetch","_url","then","response","json","catch","error","message","done","register","name","email","password","confPassword","formData","FormData","append","status","login","forgotPassword","resetPassword","newPassword","confirmPassword","tocken","getServers","failure","access_token","read_cookie","authHeaders","Headers","delete_cookie","window","location","href","createServer","serverName","serverSize","serverLocation","deleteServer","serverId","action","getApplications","createApplication","selectedServerId","selectedDomain","isWordpress","deleteApplication","applicationId","logout","this","Navigation","props","handleLogout","setState","loadding","apiHandler","console","log","handleSidebarToggle","prevState","sidebarToggle","setSidebarToggle","state","className","onClick","data-widget","role","src","require","style","width","filter","React","Component","Sidebar","id","alt","data-accordion","to","CreateServerScreen","formAction","form","document","getElementsByTagName","checkValidity","reportValidity","dataChange","event","target","value","appName","project","type","data-card-widget","data-toggle","title","onChange","placeholder","data-provide","data-slider-ticks","data-slider-ticks-labels","data-slider-min","data-slider-max","data-slider-step","data-slider-value","data-slider-tooltip","for","selected","Login","loggedIn","bake_cookie","access_tokens","pop","textAlign","margin","color","defaultValue","Register","registered","required","ForgotPassword","ResetScreen","token","params","split","class","ServerCard","toggleDropdown","dropdownOpen","deleteHandle","server","created_at","disk","ip_address","memory","region","size","dropButton","toUpperCase","Date","toDateString","Dropdown","direction","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","key","aria-hidden","Servers","showError","err","servers","msg","forEach","index","push","renderServers","ApplicationCard","application","domain","server_id","username","db_name","db_username","db_password","ssl_enabled","Applications","handleModalShow","showModal","handleModalClose","handleAddApplication","checked","applications","aria-haspopup","aria-expanded","renderApplications","Modal","show","onHide","Header","closeButton","Title","Body","htmlFor","height","Footer","Button","variant","Logout","routes","path","component","App","Routes","map","x","i","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0c0a03dc.chunk.js","sourcesContent":["import * as conf from './config';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\nclass ApiHandler {\n    constructor() {\n        this._url = conf.apiUrl;\n    }\n    getResult = (url, method = \"GET\", data = null, headers = null, success = () => { }, faild = () => { }) => {\n        let parameters = {};\n        parameters.method = method;\n        if (data) {\n            parameters.body = data;\n        } if (headers) {\n            parameters.headers = headers;\n        }\n        try {\n            fetch(this._url + url, parameters)\n                .then(response => response.json())\n                .then(response => {\n                    success(response);\n                }\n                ).catch((error) => {\n                    faild(error.message);\n                }\n                ).done();\n        } catch (error) {\n            faild(error.message);\n        }\n\n    }\n    register = (name, email, password, confPassword, success = () => { }, faild = () => { }) => {\n        if (!name || !email || !password || !confPassword) return;\n        const formData = new FormData();\n        formData.append(\"name\", name);\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        formData.append(\"confirm_password\", confPassword);\n\n        this.getResult(\"/register\", \"POST\", formData, null, (response) => {\n            if (response.status == 0) {\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"someting went wrong\");\n            }\n        });\n    }\n    login = (email, password, success = () => { }, faild = () => { }) => {\n        if (!email || !password) return;\n        const formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n\n        this.getResult(\"/login\", \"POST\", formData, null, (response) => {\n            if (response.status == 0) {\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        });\n    }\n    forgotPassword = (email, success = () => { }, faild = () => { }) => {\n        if (!email) return;\n        const formData = new FormData();\n        formData.append(\"email\", email);\n\n        this.getResult(\"/reset\", \"POST\", formData, null, (response) => {\n            if (response.status == 0) {\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        });\n    }\n    resetPassword = (email, newPassword, confirmPassword, tocken, success = () => { }, faild = () => { }) => {\n        if (!email) return;\n        const formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"newPassword\", newPassword);\n        formData.append(\"confirmPassword\", confirmPassword);\n        formData.append(\"tocken\", tocken);\n\n\n        this.getResult(\"/password/reset\", \"POST\", formData, null, (response) => {\n            if (response.status == 0) {\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        });\n    }\n    getServers = (success = () => { }, failure = () => { }) => {\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n        this.getResult(\"/droplets\", \"GET\", null, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                failure(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                failure(\"something went wrong\");\n            }\n        }, failure);\n    }\n\n    createServer = (serverName, serverSize, serverLocation, success = () => { }, faild = () => { }) => {\n        if (!serverName || !serverSize || !serverLocation) return;\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n        const formData = new FormData();\n        formData.append(\"name\", serverName);\n        formData.append(\"size\", serverSize);\n        formData.append(\"region\", serverLocation);\n\n        this.getResult(\"/droplet\", \"POST\", formData, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        },faild);\n    }\n    deleteServer = (serverId, action, success = () => { }, faild = () => { }) => {\n        if (!serverId) return;\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n        const formData = new FormData();\n        formData.append(\"action\", action);\n\n        this.getResult(\"/droplet/\"+serverId, \"POST\", formData, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message);\n            } else {\n                faild(\"something went wrong\");\n            }\n        },faild);\n    }\n    getApplications = (success = () => { }, failure = () => { }) => {\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n        this.getResult(\"/application\", \"GET\", null, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                failure(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                failure(\"something went wrong\");\n            }\n        }, failure);\n    }\n    createApplication = (selectedServerId, selectedDomain, isWordpress, success = () => { }, faild = () => { }) => {\n        if (!selectedServerId || !selectedDomain) return;\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n        const formData = new FormData();\n        formData.append(\"domain\", selectedDomain);\n        formData.append(\"server\", selectedServerId);\n        formData.append(\"wordpress\", isWordpress);\n\n        this.getResult(\"/application\", \"POST\", formData, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        },faild);\n    }\n    deleteApplication = (applicationId, success = () => { }, faild = () => { }) => {\n        if (!applicationId) return;\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token)\n\n        this.getResult(\"/application/\"+applicationId, \"POST\", null, authHeaders, (response) => {\n            if (response.status == 0) {\n                if (response.message === \"Authenticatio Failed\") {\n                    delete_cookie(\"auth\");\n                    window.location.href = \"/login\"\n                    return;\n                }\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message);\n            } else {\n                faild(\"something went wrong\");\n            }\n        },faild);\n    }\n    logout = (success = () => { }, faild = () => { }) => {\n        let access_token = read_cookie(\"auth\");\n        var authHeaders = new Headers();\n        authHeaders.append(\"Authorization\", \"Bearer \" + access_token);\n\n        this.getResult(\"/logout\", \"POST\", null, authHeaders, (response) => {\n            if (response.status == 0) {\n                faild(response.message)\n            } else if (response.status == 1) {\n                success(response.message, response.data);\n            } else {\n                faild(\"something went wrong\");\n            }\n        });\n    }\n}\n\nexport default ApiHandler;\n","export const apiUrl = \"http://157.245.252.144/api\"\n","import React from 'react';\nimport ApiHandler from '../model/ApiHandler';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            loadding: false,\n            password: \"password\",\n            error:\"\",\n            success:\"\",\n            sidebarToggle: false,\n        }\n        this.apiHandler = new ApiHandler();\n\n    }\n    handleLogout = () => {\n        const token = read_cookie(\"auth\")\n        this.setState({error:\"\", success:\"\", loadding:true})\n        this.apiHandler.logout( (message, data)=>{\n            this.setState({error:\"\", success:message, loadding:false})\n            delete_cookie(\"name\");\n            delete_cookie(\"email\");\n            delete_cookie(\"auth\");\n            window.location.href=\"/login\";\n        }, (message)=>{\n            this.setState({error:message, success:\"\", loadding:false})\n            console.log(message);\n        });\n    }\n    handleSidebarToggle = () => {\n        this.setState(prevState => ({sidebarToggle: !prevState.sidebarToggle}))\n        this.props.setSidebarToggle = () => (\n            this.state.sidebarToggle\n        )\n    }\n\n    render() {\n        return (\n            <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" onClick={this.handleSidebarToggle} data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\n                    </li>\n                </ul>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\" role=\"button\" onClick={this.handleLogout}>\n                            {this.state.loadding ?\n                                <img src={require(\"../assets/images/loading.gif\")} style={{ width: \"25px\", filter: \"brightness(20)\" }} />\n                                : <b>Logout</b>\n                            }\n\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\nexport default Navigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Sidebar extends React.Component {\n    render() {\n        return (\n            <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" id=\"sidebar\">\n                <a href=\"index3.html\" className=\"brand-link\">\n                    <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\"\n                    />\n                    <span className=\"brand-text font-weight-light\">Parvaty Cloud</span>\n                </a>\n                <div className=\"sidebar\">\n                    <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                        <div className=\"image\">\n                            <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\n                        </div>\n                        <div className=\"info\">\n                            <a href=\"#\" className=\"d-block\">Alexander Pierce</a>\n                        </div>\n                    </div>\n                    <nav className=\"mt-2\">\n                        <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                            <li className=\"nav-item has-treeview menu-open\">\n                                <Link to=\"/servers\">\n                                    <a href=\"#\" className=\"nav-link \">\n                                        <i className=\"nav-icon fas fa-tachometer-alt\"></i>\n                                        <p>\n                                            Servers\n                                        <i className=\"right fas \"></i>\n                                        </p>\n                                    </a>\n                                </Link>\n                            </li>\n                            <li className=\"nav-item has-treeview menu-open\">\n                                <Link to=\"/applications\">\n                                    <a href=\"#\" className=\"nav-link \">\n                                        <i className=\"nav-icon fas fa-tachometer-alt\"></i>\n                                        <p>\n                                            Applications\n                                        <i className=\"right fas \"></i>\n                                        </p>\n                                    </a>\n                                </Link>\n                            </li>\n                            <li className=\"nav-item has-treeview menu-open\">\n                                <a href=\"dashboard.php\" className=\"nav-link \">\n                                    <i className=\"nav-icon fas fa-tachometer-alt\"></i>\n                                    <p>\n                                        Teams\n                                        <i className=\"right fas \"></i>\n                                    </p>\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </aside>\n        );\n    }\n}\nexport default Sidebar;\n","import React from 'react';\nimport Navigation from '../components/Navigation';\nimport Sidebar from '../components/Sidebar';\nimport ApiHandler from '../model/ApiHandler';\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\n\nclass CreateServerScreen extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            serverName: \"\",\n            serverSize: \"\",\n            serverLocation: \"\",\n            appName: \"\",\n            project: \"\",\n            error: \"\",\n            success: \"\",\n            loadding: false,\n        }\n        this.apiHandler = new ApiHandler();\n    }\n    formAction = () => {\n\n        let form = document.getElementsByTagName(\"form\")[0]\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n        if (this.state.loadding) {\n            return;\n        }\n        this.setState({ error: \"\", success: \"\", loadding: true })\n        this.apiHandler.createServer(this.state.serverName, this.state.serverSize, this.state.serverLocation, (message, data) => {\n            this.setState({ error: \"\", success: message, loadding: false })\n            console.log(data, message);\n            window.location.href = \"/servers\"\n        }, (message) => {\n            this.setState({ error: message, success: \"\", loadding: false })\n            console.log(message);\n        });\n    }\n    dataChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid p-0\">\n                <Navigation />\n                <Sidebar />\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Your Dashboard</h1>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <ol className=\"breadcrumb float-sm-right\">\n                                        <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n                                        <li className=\"breadcrumb-item\"><a href=\"#\">Servers</a></li>\n                                        <li className=\"breadcrumb-item active\">Create</li>\n                                    </ol>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\"></h3>\n\n                                            <div className=\"card-tools\">\n                                                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\"\n                                                    data-toggle=\"tooltip\" title=\"Collapse\">\n                                                    <i className=\"fas fa-minus\"></i></button>\n                                                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\"\n                                                    data-toggle=\"tooltip\" title=\"Remove\">\n                                                    <i className=\"fas fa-times\"></i></button>\n                                            </div>\n                                        </div>\n                                        <form action=\"#\" method=\"post\">\n                                            <div className=\"card-body\">\n                                                <div className=\"row\">\n\n                                                    <div className=\"col-md-3\">\n                                                        <input type=\"text\" value={this.state.serverName} onChange={this.dataChange} name=\"serverName\" className=\"form-control border-bottom\" id=\"Namemanageserver\"\n                                                            placeholder=\"Name your Managed Server\" />\n                                                    </div>\n\n                                                </div>\n\n                                                <br />\n\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <h3 className=\"card-title\">Server Size</h3>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <input id=\"ex19\" type=\"text\"\n                                                            value={this.state.serverSize}\n                                                            onChange={this.dataChange}\n                                                            name=\"serverSize\"\n                                                            data-provide=\"slider\"\n                                                            data-slider-ticks=\"[1, 2, 3, 4, 5,6,7,8,9,10,11]\"\n                                                            data-slider-ticks-labels='[\"1GB\", \"2GB\", \"4gb\",\"8gb\",\"16gb\",\"32gb\",\"48gb\",\"64gb\",\"96gb\",\"128gb\",\"192gb\"]'\n                                                            data-slider-min=\"1\"\n                                                            data-slider-max=\"11\"\n                                                            data-slider-step=\"1\"\n                                                            data-slider-value=\"3\"\n                                                            data-slider-tooltip=\"hide\"\n\n                                                        />\n                                                        {/* <ReactBootstrapSlider\n                                                            value={3}\n                                                            step={1}\n                                                            max={11}\n                                                            min={1}\n                                                            reversed={true}\n                                                            ticks={[0, 100, 200, 300, 400]}\n                                                            ticks_labels={[\"1GB\", \"2GB\", \"4gb\",\"8gb\",\"16gb\",\"32gb\",\"48gb\",\"64gb\",\"96gb\",\"128gb\",\"192gb\"]}\n                                                            ticks_snap_bounds={30}\n                                                        /> */}\n                                                    </div>\n                                                </div>\n                                                <br />\n                                                <div className=\"row \">\n\n                                                    <div className=\"col-8\">\n                                                        <h3 className=\"card-title\">LOCATION</h3>\n                                                        <br />\n                                                        <div className=\"form-group\">\n                                                            <label for=\"exampleInputEmail1\">Please select your server location.</label>\n                                                            <select id=\"locations\" value={this.state.serverLocation} onChange={this.dataChange} name=\"serverLocation\" className=\"form-control border-bottom\">\n                                                                <option value=\"lon1\" selected>London</option>\n                                                                <option>San Francisco</option>\n                                                                <option value=\"sgp1\">Singapore</option>\n                                                                <option value=\"nyc1\">New York</option>\n                                                                <option value=\"ams3\">Amsterdam</option>\n                                                                <option value=\"fra1\">Frankfurt</option>\n                                                                <option value=\"tor1\">Toronto</option>\n                                                                <option value=\"blr1\">Bangalore</option>\n\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"card-footer\">\n                                                <button type=\"button\" onClick={this.formAction} className=\"btn btn-primary\">\n                                                    {this.state.loadding ?\n                                                        <img src={require(\"../assets/images/loading.gif\")} style={{ width: \"25px\", filter: \"brightness(20)\" }} />\n                                                        : \"LAUNCH NOW\"\n                                                    }\n\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default CreateServerScreen;\n","import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport ApiHandler from \"../model/ApiHandler\";\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\nclass Login extends React.Component{\n\n    constructor(props){\n        super();\n        this.state = {\n            loggedIn: false,\n            loadding:false,\n            email:\"\",\n            password:\"\"\n        }\n\n        this.apiHandler = new ApiHandler();\n        \n    }\n    componentDidMount(){\n        document.title = \"Login\";\n    }\n    formAction = ()=>{\n        let form = document.getElementsByTagName(\"form\")[0]\n        if(!form.checkValidity()){\n            form.reportValidity();\n            return;\n        }\n        if(this.state.loadding){\n            return;\n        }\n        this.setState({error:\"\", success:\"\", loadding:true})\n        this.apiHandler.login(this.state.email,this.state.password, (message, data)=>{\n            this.setState({error:\"\", success:message, loadding:false, loggedIn:true})\n            bake_cookie(\"name\", data.name);\n            bake_cookie(\"email\", data.email);\n            bake_cookie(\"auth\", data.access_tokens.pop());\n            window.location.href=\"/servers\";\n        }, (message)=>{\n            this.setState({error:message, success:\"\", loadding:false, loggedIn:false})\n        });\n    }\n    dataChange = (event)=>{\n        this.setState({[event.target.name]:event.target.value})\n    }\n    render(){\n        if(this.state.loggedIn){\n            return <Redirect to=\"/servers\" />\n        }\n        return(\n            <div className=\"wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div style={{textAlign:\"center\",margin:\"auto\"}} className=\"col-sm-6  login-page-fields\">\n                            <div className=\"login-box m-auto\">\n                                <div className=\"login-logo mt-5\">\n                                    <a href=\"/\"><b>Parvaty Cloud Hosting</b></a>\n                                </div>\n                                <div className=\"card form-card\" >\n                                    <div className=\"card-body login-card-body\">\n                                        <h4 className=\"login-box-msg \">Login Here</h4>\n                                        <p style={{color:\"red\"}}>{this.state.error}</p>\n                                        <p style={{color:\"green\"}}>{this.state.success}</p>\n                                        <form action=\"#\" method=\"post\">\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"email\" name=\"email\" onChange={this.dataChange} defaultValue={this.state.email} className=\"form-control border-bottom\" id=\"email\" placeholder=\"Email\"/>\n                                                <div className=\"input-group-append  border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-envelope\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"password\" name=\"password\" onChange={this.dataChange} defaultValue={this.state.password} className=\"form-control border-bottom\" id=\"password\" placeholder=\"Password\"/>\n                                                <div className=\"input-group-append border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-lock\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" className=\"btn btn-primary btn-block text-uppercase\" onClick={this.formAction}>\n                                                        {this.state.loadding?\n                                                        <img src={require(\"../assets/images/loading.gif\")} style={{width: \"25px\", filter: \"brightness(20)\"}}/>\n                                                        :\n                                                        \"Login\"\n                                                        }\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-1 font-weight-lighter un\">\n                                                        <Link to=\"/forgot-password\" className=\"text-center\">\n                                                            <small><u>Forgot Password?</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-0 font-weight-lighter\">\n                                                        <Link to=\"/register\" className=\"text-center\">\n                                                            <small><u>New to Parvaty? SignUp</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Login;\n"," import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport ApiHandler from \"../model/ApiHandler\";\n\nclass Register extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n            loadding:false,\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            error:\"\",\n            success:\"\",\n            registered: false\n        }\n        this.apiHandler = new ApiHandler();\n    }\n    formAction = ()=>{\n        let form = document.getElementsByTagName(\"form\")[0]\n        if(!form.checkValidity()){\n            form.reportValidity();\n            return;\n        }\n        if(this.state.loadding){\n            return;\n        }\n        this.setState({error:\"\", success:\"\", loadding:true})\n        this.apiHandler.register(this.state.name,this.state.email,this.state.password, this.state.confirmPassword, (message, data)=>{\n            this.setState({error:\"\", success:message, loadding:false, registered:true})\n        }, (data)=>{\n            this.setState({error:data, success:\"\", loadding:false, registered:false})\n        });\n    }\n    dataChange = (event)=>{\n        this.setState({[event.target.name]:event.target.value})\n    }\n    componentDidMount(){\n        document.title = \"Register\";\n    }\n    render(){\n\n         if(this.state.registered){\n            return <Redirect to=\"/login\" />\n        }\n        return(\n            <div className=\"wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div style={{textAlign:\"center\",margin:\"auto\"}} className=\"col-sm-6  login-page-fields\">\n                            <div className=\"login-box m-auto\">\n                                <div className=\"login-logo mt-5\">\n                                    <a href=\"/\"><b>Parvaty Cloud Hosting</b></a>\n                                </div>\n                                <div className=\"card form-card\">\n                                    <div className=\"card-body login-card-body\">\n                                        <h4 className=\"login-box-msg \">Register Here</h4>\n                                        <p style={{color:\"red\"}}>{this.state.error}</p>\n                                        <p style={{color:\"green\"}}>{this.state.success}</p>\n                                        <form action=\"#\" method=\"post\">\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"text\" onChange={this.dataChange} defaultValue={this.state.name} className=\"form-control border-bottom\" required name=\"name\" id=\"name\" placeholder=\"Full Name\"/>\n                                                <div className=\"input-group-append  border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-user\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"email\" onChange={this.dataChange} defaultValue={this.state.email} required className=\"form-control border-bottom\" name=\"email\" id=\"email\" placeholder=\"Email\"/>\n                                                <div className=\"input-group-append  border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-envelope\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"password\" onChange={this.dataChange} required className=\"form-control border-bottom\" name=\"password\" id=\"password\" placeholder=\"Password\"/>\n                                                <div className=\"input-group-append border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-lock\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"password\" onChange={this.dataChange} required className=\"form-control border-bottom\" name=\"confirmPassword\" id=\"confirm-password\" placeholder=\"Confirm Password\"/>\n                                                <div className=\"input-group-append border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-lock\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" className=\"btn btn-primary btn-block text-uppercase\" onClick={this.formAction}>\n                                                    {this.state.loadding?\n                                                        <img src={require(\"../assets/images/loading.gif\")} style={{width: \"25px\", filter: \"brightness(20)\"}}/>\n                                                        :\n                                                        \"Register\"\n                                                    }\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-1 font-weight-lighter un\">\n                                                        <Link to=\"/login\" className=\"text-center\">\n                                                            <small><u>Already have a account?</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-0 font-weight-lighter\">\n                                                        <Link to=\"/forgot-password\" className=\"text-center\">\n                                                            <small><u>Forgot Password?</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Register;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport ApiHandler from \"../model/ApiHandler\";\n\nclass ForgotPassword extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n            loggedIn: false,\n            loadding:false,\n            email:\"\",\n        }\n\n        this.apiHandler = new ApiHandler();\n    }\n    formAction = ()=>{\n        let form = document.getElementsByTagName(\"form\")[0]\n        if(!form.checkValidity()){\n            form.reportValidity();\n            return;\n        }\n        if(this.state.loadding){\n            return;\n        }\n        this.setState({error:\"\", success:\"\", loadding:true})\n        this.apiHandler.forgotPassword(this.state.email, (message)=>{\n            this.setState({error:\"\", success:message, loadding:false})\n\n        }, (message)=>{\n            this.setState({error:message, success:\"\", loadding:false})\n        });\n    }\n    dataChange = (event)=>{\n        this.setState({[event.target.name]:event.target.value})\n    }\n    render(){\n        return(\n            <div className=\"wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div style={{textAlign:\"center\",margin:\"auto\"}} className=\"col-sm-6  login-page-fields\">\n                            <div className=\"login-box m-auto\">\n                                <div className=\"login-logo mt-5\">\n                                    <a href=\"/\"><b>Parvaty Cloud Hosting</b></a>\n                                </div>\n                                <div className=\"card\">\n                                    <div className=\"card-body login-card-body\">\n                                        <h4 className=\"login-box-msg \">Forgot Password</h4>\n                                        <p style={{color:\"red\"}}>{this.state.error}</p>\n                                        <p style={{color:\"green\"}}>{this.state.success}</p>\n                                        <form action=\"#\" method=\"post\">\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"email\" name=\"email\" defaultValue={this.state.email} className=\"form-control border-bottom\" id=\"email\" placeholder=\"Email\"\n                                                    onChange={this.dataChange}\n                                                />\n                                                <div className=\"input-group-append  border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-envelope\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" className=\"btn btn-primary btn-block text-uppercase\"onClick={this.formAction}>\n                                                        {this.state.loadding?\n                                                        <img src={require(\"../assets/images/loading.gif\")} style={{width: \"25px\", filter: \"brightness(20)\"}}/>\n                                                        :\n                                                        \"Send Password Reset Mail\"\n                                                        }</button>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-1 font-weight-lighter un\">\n                                                        <Link to=\"/login\" className=\"text-center\">\n                                                            <small><u>Login here</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-0 font-weight-lighter\">\n                                                        <Link to=\"/register\" className=\"text-center\">\n                                                            <small><u>Dont have a account?</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ForgotPassword;\n","import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport ApiHandler from \"../model/ApiHandler\";\n\nclass ResetScreen extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            loggedIn: false,\n            loadding: false,\n            email: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            token: \"\"\n        }\n\n        this.apiHandler = new ApiHandler();\n        // alert(window.location.href)\n\n    }\n    componentDidMount(){\n        let params = window.location.href\n        let token = params.split(\"?\")[0].split(\"/\").pop()\n        let email = params.split(\"?\")[1].split(\"=\").pop()\n        this.state.setState({email: email, token: token})\n    }\n    formAction = ()=>{\n        let form = document.getElementsByTagName(\"form\")[0]\n        if(!form.checkValidity()){\n            form.reportValidity();\n            return;\n        }\n        if(this.state.loadding){\n            return;\n        }\n        this.setState({error:\"\", success:\"\", loadding:true})\n        this.apiHandler.resetPassword(this.state.email,this.state.newPassword, this.state.confirmPassword, this.state.tocken,\n        (message, data)=>{\n            this.setState({error:\"\", success:message, loadding:false, loggedIn:true})\n\n        }, (message)=>{\n            this.setState({error:message, success:\"\", loadding:false, loggedIn:false})\n        });\n    }\n    dataChange = (event)=>{\n        this.setState({[event.target.name]:event.target.value})\n    }\n    render() {\n         if(this.state.loggedIn){\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <div className=\"wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div style={{textAlign:\"center\",margin:\"auto\"}} className=\"col-sm-6  login-page-fields\">\n                            <div className=\"login-box m-auto\">\n                                <div className=\"login-logo mt-5\">\n                                    <a href=\"/\"><b>Parvaty Cloud Hosting</b></a>\n                                </div>\n                                <div className=\"card\" >\n                                    <div className=\"card-body login-card-body\">\n                                        <h4 className=\"login-box-msg \">Reset Password</h4>\n                                        <p style={{color:\"red\"}}>{this.state.error}</p>\n                                        <p style={{color:\"green\"}}>{this.state.success}</p>\n                                        <form action=\"#\" method=\"post\">\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"password\" name=\"newPassword\" onChange={this.dataChange} defaultValue={this.state.newPassword} className=\"form-control border-bottom\" id=\"newPassword\" placeholder=\"New Password\"/>\n                                                <div className=\"input-group-append  border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-lock\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <input type=\"password\" name=\"confirmPassword\" onChange={this.dataChange} defaultValue={this.state.confirmPassword} className=\"form-control border-bottom\" id=\"confirmPassword\" placeholder=\"confirmPassword\"/>\n                                                <div className=\"input-group-append border-bottom\">\n                                                    <div className=\"input-group-text\">\n                                                        <span className=\"fas fa-lock\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <button type=\"button\" className=\"btn btn-primary btn-block text-uppercase\" onClick={this.formAction}>\n                                                        {this.state.loadding?\n                                                        <img src={require(\"../assets/images/loading.gif\")} style={{width: \"25px\", filter: \"brightness(20)\"}}/>\n                                                        :\n                                                        \"Reset\"\n                                                        }\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-1 font-weight-lighter un\">\n                                                        <Link to=\"/login\" className=\"text-center\">\n                                                            <small><u>Login here</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <p className=\"mb-0 font-weight-lighter\">\n                                                        <Link to=\"/register\" class=\"text-center\">\n                                                            <small><u>New to Parvaty? SignUp</u></small>\n                                                        </Link>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResetScreen;\n","import React from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport ApiHandler from '../model/ApiHandler';\n\n\n/**\n *\ncreated_at: \"2020-10-04T05:27:10.000000Z\"\ndisk: \"25\"\nid: 3\nip_address: \"142.93.12.4\"\nmemory: \"1024\"\nmeta_data: null\nname: \"test\"\npassword: \"javrD4Wk\"\nregion: \"nyc1\"\nsize: \"s-1vcpu-1gb\"\nstatus: \"READY\"\nupdated_at: \"2020-10-04T05:32:08.000000Z\"\nuser_id: \"3\"\n */\n\nclass ServerCard extends React.Component {\n    constructor(props) {\n        super();\n        this.props = props;\n        this.server = props.server;\n        this.state = {\n            created_at: props.server.created_at,\n            disk: props.server.disk,\n            id: props.server.id,\n            ip_address: props.server.ip_address,\n            memory: props.server.memory,\n            name: props.server.name,\n            password: props.server.password,\n            region: props.server.region,\n            size: props.server.size,\n            status: props.server.status,\n            dropButton: false,\n            loadding: false,\n            error: \"\",\n            success: \"\",\n            dropdownOpen: false,\n        }\n        this.apiHandler = new ApiHandler();\n    }\n    toggleDropdown = () => this.setState(prevState => ({dropdownOpen: !prevState.dropdownOpen}))\n\n\n    deleteHandle = () => {\n        if (this.state.loadding) {\n            return;\n        }\n        this.setState({ error: \"\", success: \"\", loadding: true })\n        this.apiHandler.deleteServer(this.state.id, \"destroy\", (message, data) => {\n            this.setState({ error: \"\", success: message, loadding: false })\n            window.location.href = \"/servers\"\n        }, (message) => {\n            this.setState({ error: message, success: \"\", loadding: false })\n        });\n    }\n    render() {\n        return (\n            <div className=\"card card-outline\">\n                <div className=\"card-body\">\n                    <div className=\"row mb-2\">\n                        <div className=\"col-sm-12 col-md-9 application_page_card_info\">\n                            <div className=\"float-left\">\n                                <span className=\"p-2 channel_green_dot btn-success\"></span>\n                            </div>\n                            <a href=\"server-details.php\">\n                                <div className=\"row\">\n                                    <div className=\"col-1\">\n                                        <img style={{ width: \"100%\" }} src={require('../assets/images/wordpress.png')} />\n                                    </div>\n                                    <div className=\"col-11\">\n                                        <div className=\"d-flex\">\n                                            <p className=\"m-0\">{this.state.name}</p>\n                                            <span class=\"badge badge-info ml-4 pt-1\">{this.state.status}</span>\n                                        </div>\n                                        <p className=\"m-0\">{this.state.size.split(\"-\").pop().toUpperCase()} {this.state.ip_address} {this.state.region}</p>\n                                        <p className=\"mt-3\"><small>Created: {new Date(this.state.created_at).toDateString()}</small></p>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"col-sm-12 col-md-3 text-right application_page_card_actions d-flex\">\n                            <a href=\"\" className=\"pl-3\">www<span className=\"number_of_users\"> 0</span></a>\n                            <a href=\"\" className=\"pl-3\"><i className=\"fa fa-folder-open\"><span className=\"number_of_users\">0</span></i></a>\n                            <a href=\"\" className=\"pl-3\"><i className=\"fa fa-user\"><span className=\"number_of_users\">0</span></i></a>\n\n                            <Dropdown direction=\"left\" isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n                                <DropdownToggle className=\"btn btn-default ml-3\">\n                                    <i className=\"fas fa-ellipsis-v\"></i>\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <DropdownItem key=\"1\"><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-stop \"></i>&nbsp;Stop</a></DropdownItem>\n                                    <DropdownItem key=\"2\"><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-redo\" aria-hidden=\"true\"></i>&nbsp;Restart</a></DropdownItem>\n                                    <DropdownItem key=\"3\"><a className=\"dropdown-item\" href=\"#\" onClick={this.deleteHandle}><i className=\"fa fa-trash\"></i>&nbsp;Delete</a></DropdownItem>\n                                    <DropdownItem key=\"4\"><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-globe\"></i>&nbsp;Add Application</a></DropdownItem>\n                                    <DropdownItem key=\"5\"><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-server\"></i>&nbsp;Transfer Server</a></DropdownItem>\n                                    <DropdownItem key=\"6\"><a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-clone\"></i>&nbsp;Clone Server</a></DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ServerCard;\n","import React from 'react';\nimport Navigation from '../components/Navigation';\nimport Sidebar from '../components/Sidebar';\nimport ServerCard from '../components/ServerCard';\nimport ApiHandler from '../model/ApiHandler';\nimport { Redirect, Link } from 'react-router-dom';\n\nclass Servers extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            servers: []\n        }\n        this.apiHandler = new ApiHandler();\n    }\n    showError = (err) => {\n\n    }\n    componentDidMount() {\n        document.title = \"Your Servers\";\n        this.apiHandler.getServers((msg, data) => {\n            this.setState({ servers: data })\n        }, err => {\n            this.showError(err);\n        })\n    }\n    renderServers() {\n        let servers = [];\n        this.state.servers.forEach((data, index) => {\n            servers.push(<ServerCard key={index} server={data} />);\n        })\n        return servers;\n    }\n    render() {\n        return (\n            <div className=\"container-fluid p-0\">\n                <Navigation />\n                <Sidebar />\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n\n                        </div>\n                    </section>\n\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"card card-primary card-outline\">\n                                        <div className=\"card-header\">\n                                            <div className=\"col-3 float-left\">\n                                                <Link to=\"/server/create\" className=\"text-center\">\n                                                    <a href=\"#\" className=\"btn btn-info \">+ Add Server</a>\n                                                </Link>\n                                            </div>\n\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"col-12 application_page_cards\" id=\"huddles\">\n                                                {this.renderServers()}\n                                            </div>\n                                        </div>\n                                        <div className=\"card-footer\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Servers;\n","import React from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass ApplicationCard extends React.Component {\n    constructor(props) {\n        super();\n        this.props = props;\n        this.application = props.application;\n        this.state = {\n            created_at: props.application.created_at,\n            id: props.application.id,\n            domain: props.application.domain,\n            server_id: props.application.server_id,\n            status: props.application.status,\n            username: props.application.username,\n            password: props.application.password,\n            db_name: props.application.db_name,\n            db_username: props.application.db_username,\n            db_password: props.application.db_password,\n            ssl_enabled: props.application.ssl_enabled,\n            loadding: false,\n            error: \"\",\n            success: \"\",\n            dropdownOpen: false,\n        }\n    }\n    toggleDropdown = () => this.setState(prevState => ({dropdownOpen: !prevState.dropdownOpen}))\n    deleteHandle = () => {\n        if (this.state.loadding) {\n            return;\n        }\n        this.setState({ error: \"\", success: \"\", loadding: true })\n        this.apiHandler.deleteApplication(this.state.id, (message, data) => {\n            this.setState({ error: \"\", success: message, loadding: false })\n            console.log(data, message);\n        }, (message) => {\n            this.setState({ error: message, success: \"\", loadding: false })\n            console.log(message);\n        });\n    }\n    render() {\n        return (\n            <div className=\"col-12 application_page_cards\" id=\"huddles\">\n                <div className=\"card card-outline\">\n                    <div className=\"card-body\">\n                        <div className=\"row mb-2\">\n                            <div className=\"col-10 application_page_card_info\">\n                                <a href=\"application.php\">\n                                    <div className=\"row\">\n                                        <div className=\"col-1\">\n                                            <img style={{width:\"50%\"}} src={require(\"../assets/images/wordpress.png\")} />\n                                        </div>\n                                        <div className=\"col-11\">\n                                            <h6><b>Test</b></h6>\n                                            <p className=\"m-0\">Server: Lifehacks Server</p>\n                                            <p className=\"m-0\">Project: Lifehacks World Conquering</p>\n                                            <p className=\"mt-3\"><small>Created: 12 March, 2020</small></p>\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                            <div className=\"col-2 text-right application_page_card_actions\">\n                                <a href=\"\" className=\"pl-3\"><i className=\"fa fa-external-link-square-alt\"></i></a>\n                                <a href=\"\" className=\"pl-3\"><i className=\"fa fa-user\"><span className=\"number_of_users\">0</span></i></a>\n                                {/* <div className=\"btn-group pl-3 dropleft\">\n                                    <i className=\"fas fa-ellipsis-v\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" aria-expanded=\"false\"></i>\n                                    <div className=\"dropdown-menu\">\n                                        <a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-trash danger\"></i>&nbsp;Delete</a>\n                                        <a className=\"dropdown-item\" href=\"#\"><i className=\"fa fa-clone info\"></i>&nbsp;Clone App/Create Staging</a>\n                                    </div>\n                                </div> */}\n                                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n                                    <DropdownToggle>\n                                        Dropdown\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                        <DropdownItem><a href=\"#\"><i className=\"fa fa-trash danger\"></i>&nbsp;Delete</a></DropdownItem>\n                                        <DropdownItem><a href=\"#\" onClick={this.deleteHandle}><i className=\"fa fa-clone info\"></i>&nbsp;Clone App/Create Staging</a></DropdownItem>\n                                    </DropdownMenu>\n                                </Dropdown>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ApplicationCard;\n","import React from 'react'\nimport Navigation from '../components/Navigation';\nimport Sidebar from '../components/Sidebar';\nimport ApiHandler from '../model/ApiHandler';\nimport ApplicationCard from '../screens/ApplicationCard';\nimport { Modal, Button } from 'react-bootstrap';\n\nclass Applications extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            applications: [],\n            showModal: false,\n            loadding: false,\n            servers: [],\n            error: \"\",\n            success: \"\",\n            selectedServerId: \"\",\n            selectedDomain: \"\",\n            isWordpress: false,\n        }\n        this.apiHandler = new ApiHandler();\n    }\n    showError = (err) => {\n\n    }\n    componentDidMount() {\n        document.title = \"Your Applications\";\n        this.apiHandler.getApplications((msg, data) => {\n            this.setState({ applications: data })\n            console.log(data+\", \"+msg);\n        }, err => {\n            this.showError(err);\n            console.log(err);\n        })\n        this.apiHandler.getServers((msg, data) => {\n            this.setState({ servers: data })\n        }, err => {\n            this.showError(err);\n        })\n    }\n    renderServers() {\n        let servers = [];\n        this.state.servers.forEach((data, index) => {\n            servers.push(<option key={index} value={data.id}>{data.name}</option>);\n        })\n        return servers;\n    }\n    renderApplications() {\n        let applications = [];\n        this.state.applications.forEach((data, index) => {\n            applications.push(<ApplicationCard key={index} application={data} />);\n        })\n        return applications;\n    }\n    handleModalShow = () => {\n        this.setState({\n            showModal: true,\n        })\n    }\n    handleModalClose = () => {\n        this.setState({\n            showModal: false,\n        })\n    }\n    handleAddApplication = () => {\n        let form = document.getElementsByTagName(\"form\")[0]\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n        if (this.state.loadding) {\n            return;\n        }\n        this.setState({ error: \"\", success: \"\", loadding: true })\n        this.apiHandler.createApplication(this.state.selectedServerId, this.state.selectedDomain, this.state.isWordpress, (message, data) => {\n            this.setState({ error: \"\", success: message, loadding: false })\n            console.log(data, message);\n        }, (message) => {\n            this.setState({ error: message, success: \"\", loadding: false })\n            console.log(message);\n        });\n    }\n    dataChange = (event) => {\n        if (event.target.type === 'checkbox') {\n            this.setState({ [event.target.name]: event.target.checked })\n        }\n        else {\n\n            this.setState({ [event.target.name]: event.target.value })\n        }\n    }\n    render() {\n        return (\n            <div className=\"container-fluid p-0\">\n                <Navigation />\n                <Sidebar />\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h1>Applications</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"card card-primary card-outline\">\n                                        <div className=\"card-header\">\n                                            <div className=\"col-3 float-left\">\n                                                <a href=\"#\" className=\"btn btn-primary start_new_app\" onClick={this.handleModalShow}>START A NEW APPLICATION</a>\n                                            </div>\n                                            <div className=\"col-3 float-right pt-1\">\n                                                <div className=\"btn-group pl-3 float-right dropleft\">\n                                                    <i className=\"fas fa-bars\" data-toggle=\"dropdown\"\n                                                        aria-haspopup=\"true\" aria-expanded=\"false\"></i>\n                                                    <div className=\"dropdown-menu\">\n                                                        <a className=\"dropdown-item\" href=\"#\">Name</a>\n                                                        <a className=\"dropdown-item\" href=\"#\">Created Date</a>\n                                                        <a className=\"dropdown-item\" href=\"#\">Projects</a>\n                                                        <a className=\"dropdown-item\" href=\"#\">Servers</a>\n                                                        <a className=\"dropdown-item\" href=\"#\">Staging</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"col-12 application_page_cards\" id=\"huddles\">\n                                                {this.renderApplications()}\n                                            </div>\n                                        </div>\n                                        <div className=\"card-footer\"></div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </section>\n                </div>\n                <Modal show={this.state.showModal} onHide={this.handleModalClose}>\n                    <form action=\"#\" method=\"post\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>ADD APPLICATION</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"selectedDomain\">Select Domain</label>\n                                <select className=\"form-control\" name=\"selectedDomain\" value={this.state.selectedDomain} onChange={this.dataChange} id=\"selectedDomain\">\n                                    <option >Select</option>\n                                    <option value=\"dibs.com\">dibs.com</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"select_server\">Select server in which you want to Add new application</label>\n                                <select className=\"form-control\" name=\"selectedServerId\" value={this.state.selectedServerId} onChange={this.dataChange} id=\"select_server\" className=\"form-control\" >\n                                    <option value=\"\">Select</option>\n                                    {\n                                        this.renderServers()\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"form-group d-flex flex-column justify-content-center align-items-center\">\n                                <label htmlFor=\"isWordpress\">Wordpress</label>\n                                <input className=\"form-control\" type=\"checkbox\" name=\"isWordpress\" checked={this.state.isWordpress} onChange={this.dataChange} style={{ width: \"20px\", height: \"20px\" }} />\n                            </div>\n\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"info\" onClick={this.handleAddApplication}>\n                                {\n                                    this.state.loadding?\n                                    <img src={require(\"../assets/images/loading.gif\")} style={{ width: \"25px\", filter: \"brightness(20)\" }} />\n                                    :\"ADD APPLICATION\"\n                                }\n                            </Button>\n                            <Button variant=\"default\" onClick={this.handleModalClose}>\n                                CLOSE\n                        </Button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </div>\n        )\n    }\n}\nexport default Applications;\n","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\n\nclass Logout extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n\n                        <div style={{ textAlign: \"center\", margin: \"auto\" }} className=\"col-sm-6  login-page-fields\">\n                            <div className=\"login-box m-auto\">\n                                <div className=\"login-logo mt-5\">\n                                    <a href=\"/\"><b>Parvaty Cloud Hosting</b></a>\n                                </div>\n                                <div className=\"card form-card\" >\n                                    <div className=\"card-body login-card-body\">\n                                        <h4 className=\"login-box-msg \">Logedout Successfully</h4>\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <p className=\"mb-1 font-weight-lighter un\">\n                                                    <Link to=\"/forgot-password\" className=\"text-center\">\n                                                        <small><u>Forgot Password?</u></small>\n                                                    </Link>\n                                                </p>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                <p className=\"mb-0 font-weight-lighter\">\n                                                    <Link to=\"/register\" className=\"text-center\">\n                                                        <small><u>New to Parvaty? SignUp</u></small>\n                                                    </Link>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Logout;\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport CreateServerScreen from '../screens/CreateServerScreen';\nimport Login from '../screens/Login';\nimport Register from '../screens/Register';\nimport ForgotPassword from '../screens/ForgotPassword';\nimport ResetScreen from '../screens/ResetScreen';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\nimport Servers from '../screens/Servers';\nimport Applications from '../screens/Applications';\nimport Logout from '../screens/Logout';\n\n\n//let routes = [\n    // {\n    //     path: '/',\n    //     component: () =>{\n    //         console.log(localStorage.getItem(\"validation\")===true)\n    //         if(localStorage.getItem(\"access_token\") === \"true\"){\n    //             return <Redirect to=\"/servers\" />;\n    //         }else{\n    //             return <Redirect to=\"/login\" />;\n    //         }\n    //     }\n    // },\n\nlet routes = [\n    {\n        path: '/',\n        component: () =>{\n            let cookie = read_cookie(\"auth\")\n            if(typeof cookie !== \"object\"){\n                return <Redirect to=\"/servers\" />;\n            }else{\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    },\n    {\n        path: '/login',\n        component: () => <Login/>\n    },\n    {\n        path: '/register',\n        component: () => <Register/>\n    },\n    {\n        path: '/forgot-password',\n        component: () => <ForgotPassword/>\n    },\n    {\n        path: '/servers',\n        title: 'Dashboard',\n        component: () => <Servers />\n    },\n    {\n        path: '/server/create',\n        title: 'Create Server',\n        component: () => <CreateServerScreen />\n    },\n    {\n        path: '/reset',\n        title: 'Reset',\n        component: () => <ResetScreen />\n    },\n    {\n        path: '/applications',\n        title: 'Applications',\n        component: () => <Applications />\n    },\n    {\n        path: '/logout',\n        title: 'Logout',\n        component: () => <Logout />\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport './App.css';\nimport Routes from \"./components/Routes\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Login from './screens/Login';\n\nfunction App() {\n  return (\n    <Router>\n        {Routes.map((x,i) =>\n            <Route key={i} path={x.path} component={x.component} />\n        )}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.e4b6323e.gif\";","module.exports = __webpack_public_path__ + \"static/media/wordpress.13757bb5.png\";"],"sourceRoot":""}