{"version":3,"sources":["views/dashboard/Dashboard.js","reusable/Permissions.js"],"names":["usersData","id","name","registered","droplets","applications","fields","Dashboard","props","usePermission","useDispatch","xs","sm","md","lg","className","text","header","color","content","cilFolder","size","items","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","item","UsePermission","per","permissions","useSelector","stateObj","userPermissions","isTrue","undefined","find","permission","WithPermission","_nav","menu","length","forEach","nav","_tag","hasOwnProperty","push","dropdown","_children","subNav"],"mappings":"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","file":"static/js/8.8e4e012c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n// import Api from '../../Api'\r\nimport { usePermission } from '../../reusable/Permissions';\r\nimport {\r\n    CBadge,\r\n    CButton,\r\n    // CButton,\r\n    // CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CInput,\r\n    // CProgress,\r\n    CRow,\r\n    // CCallout,\r\n    CWidgetIcon\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilFolder } from '@coreui/icons'\r\n\r\nconst usersData = [\r\n    { id: 0, name: 'John Doe', registered: '2018/01/01', droplets: '1', applications: '3' },\r\n    { id: 1, name: 'Samppa Nori', registered: '2018/01/01', droplets: '1', applications: '2' },\r\n    { id: 2, name: 'Estavan Lykos', registered: '2018/02/01', droplets: '0', applications: '0' },\r\n    { id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', droplets: '1', applications: '2' },\r\n    { id: 4, name: 'Derick Maximinus', registered: '2018/03/01', droplets: '2', applications: '2' },\r\n    { id: 5, name: 'Friderik Dávid', registered: '2018/01/21', droplets: '0', applications: '0' },\r\n    { id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', droplets: '1', applications: '8' },\r\n    { id: 7, name: 'Avram Tarasios', registered: '2018/02/01', droplets: '2', applications: '6' },\r\n    { id: 8, name: 'Quintin Ed', registered: '2018/02/01', droplets: '0', applications: '0' },\r\n    { id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', droplets: '0', applications: '0' },\r\n    { id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', droplets: '1', applications: '0' },\r\n]\r\n\r\nconst fields = ['id', 'name', 'droplets', 'applications', 'registered', 'action']\r\n// const fields2 = ['name', 'registered', 'domain', 'status']\r\nconst Dashboard = (props) => {\r\n    const can = usePermission\r\n    const dispatch = useDispatch()\r\n    // const show = useSelector(state => state.userPermissions)\r\n    //   const show2 = useSelector(state => state.userRole)\r\n\r\n    return (\r\n        <>\r\n            <CRow>\r\n                <CCol xs='12' sm='4' md='4' lg=\"4\">\r\n                    <CWidgetIcon className=\"widget-custom\" text=\"projects\" header=\"100,000\" color=\"primary\">\r\n                        <CIcon content={cilFolder} size={'xl'} />\r\n\r\n                    </CWidgetIcon>\r\n                </CCol>\r\n                <CCol xs='12' sm='4' md='4' lg=\"4\">\r\n                    <CWidgetIcon className=\"widget-custom\" text=\"droplets\" header=\"150,000\" color=\"info\">\r\n                        <CIcon name={'cilSettings'} size={'xl'} />\r\n                    </CWidgetIcon>\r\n                </CCol>\r\n                <CCol xs='12' sm='4' md='4' lg=\"4\">\r\n                    <CWidgetIcon className=\"widget-custom\" text=\"income\" header=\"$154,4514,45\" color=\"success\">\r\n                        <CIcon name={'cilSettings'} size={'xl'} />\r\n                    </CWidgetIcon>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs='12' sm='12' md='12' lg=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            New Users - Demo Data\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"p-0 has-table\">\r\n                            <CDataTable\r\n                                items={usersData}\r\n                                fields={fields}\r\n                                columnFilter\r\n                                tableFilter\r\n                                footer\r\n                                itemsPerPageSelect\r\n                                itemsPerPage={5}\r\n                                hover\r\n                                sorter\r\n                                pagination={false}\r\n                            />\r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            hi\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                </CCol>\r\n                <CCol xs='12' sm='12' md='12' lg=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            New Droplets\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"p-0\">\r\n                            <CDataTable\r\n                                items={usersData}\r\n                                fields={fields}\r\n                                itemsPerPage={5}\r\n                                pagination={false}\r\n                                scopedSlots={{\r\n                                    'action':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                a\r\n                                            </td>\r\n                                        )\r\n\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n// const mapStateToProps = state => ({\r\n//     //blabla: state.authToken,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     // fnBlaBla: () => dispatch(action.name()),\r\n// });\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps,\r\n// )(Dashboard);\r\n\r\nexport default Dashboard","// import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction UsePermission(per) {\r\n    const permissions = useSelector(stateObj => stateObj.userPermissions)\r\n    let isTrue = false;\r\n    if (permissions !== null && permissions !== '') {\r\n        isTrue = (permissions.find(permission => permission.name === per) !== undefined) ? true : false\r\n    }\r\n    return isTrue;\r\n}\r\n\r\nfunction WithPermission(_nav) {\r\n    const permissions = useSelector(stateObj => stateObj.userPermissions)\r\n    let menu = [];\r\n    if (permissions.length > 0) {\r\n        _nav.forEach((nav) => {\r\n            if (nav._tag === 'CSidebarNavItem') {\r\n                if (nav.hasOwnProperty(\"permission\")) {\r\n                    if (permissions.find(permission => permission.name === nav.permission) !== undefined) {\r\n                        menu.push(nav)\r\n                    }\r\n                } else {\r\n                    menu.push(nav)\r\n                }\r\n            } else if (nav._tag === 'CSidebarNavDropdown') {\r\n                let dropdown = []\r\n                if (nav.hasOwnProperty(\"_children\")) {\r\n                    nav._children.forEach((subNav) => {\r\n                        if (subNav.hasOwnProperty(\"permission\")) {\r\n                            if (permissions.find(permission => permission.name === subNav.permission) !== undefined) {\r\n                                dropdown.push(subNav)\r\n                            }\r\n                        } else {\r\n                            dropdown.push(subNav)\r\n                        }\r\n                    });\r\n                }\r\n                nav._children = dropdown\r\n                if (dropdown.length > 0) {\r\n                    menu.push(nav)\r\n                }\r\n            } else if (nav._tag === 'CSidebarNavTitle') {\r\n                menu.push(nav)\r\n            }\r\n        })\r\n    }\r\n    return menu;\r\n}\r\nexport {\r\n    UsePermission as usePermission,\r\n    WithPermission as withPermission\r\n}\r\n// export {\r\n//     UsePermission\r\n// }"],"sourceRoot":""}